:bootstrap

import std.XML.*

Atom ::=
    | Name
    | Str
    | '(' Or ')'

Trail ::=
    | Atom ['+' | '*' | '{' Number{1, 2} '}']
    | '~' Atom

And   ::=
    | Trail+

Or    ::=
    | And ('|' And)*

Statement ::=
    | 'ignore' '[' Name ']'
    | 'import' Name ('.' ('*' | Name))*
    | Name '::=' ['|']  Or [Clauses]
    | Name ['cast'] ['as' Name] ':=' ['|'] Str+ [Clauses]

Clauses ::=
    [When] [With] [Where] [Rewrite]

When ::= 'when' XML

With ::= 'with' XML

Rewrite ::= 'rewrite' XML

Statements ::=
    | Statement (END Statement)*



:XML

import std.common.[Name Space] 
# import `Name` and `Space` from $RBNF_HOME/std/common  

XML ::= 
    | '<' Name as t1 '/' '>'
    | '<' Name as t1 '>' (XML | ~('<' '/' Name '>'))* as seq '<' '/' 
    Name as t2 '>'
    with
        't2' not in state.ctx or t1.value == t2.value
    rewrite
        t1.value, seq if 'seq' in state.ctx else ()



